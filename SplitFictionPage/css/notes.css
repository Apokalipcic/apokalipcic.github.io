/* notes.css - Styles for notes, shapes, and portal effects */

/* Note styling - Base styles for all notes */
.note {
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    font-weight: bold;
    cursor: pointer;
    user-select: none;
    transition: all 0.2s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    position: absolute; /* Make notes absolute positioned */
    z-index: 5; /* Above panels but below divider */
}

    .note.draggable {
        position: absolute;
    }

    .note.dragging {
        cursor: grabbing;
        transform: scale(1.1);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
        opacity: 0.9;
        z-index: 30 !important; /* Ensure it's on top of everything while dragging */
    }

/* Note colors by player */
.note-a {
    background: #00ff9d;
    color: #003629;
    border: 2px solid #00cc7a;
}

.note-b {
    background: #ff00cc;
    color: #660066;
    border: 2px solid #cc0099;
}

/* Hollow state base styles */
.note-a.hollow {
    background-color: transparent;
    border: 2px solid #00cc7a;
    color: #00cc7a;
}

.note-b.hollow {
    background-color: transparent;
    border: 2px solid #ff00cc;
    color: #ff00cc;
}

/* Ensure text is visible and centered for all shapes */
.note span {
    position: relative;
    z-index: 2;
    display: inline-block;
    transform: none; /* Reset any transform */
}

/* ===== SHAPE DEFINITIONS ===== */

/* Base shape properties */
.note {
    border: none; /* Remove default borders */
    border-radius: 0; /* Remove default border radius */
    overflow: visible;
    position: relative;
    background-color: transparent; /* All notes have transparent background by default */
}

    /* Double-element technique for consistent borders with clip-path */
    .note::before, .note::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
    }

    /* The outer element (border) */
    .note::before {
        background-color: currentColor; /* Use text color for border */
    }

    /* The inner element (background) */
    .note::after {
        background-color: inherit; /* For filled state */
        top: 2px;
        left: 2px;
        width: calc(100% - 4px);
        height: calc(100% - 4px);
        z-index: 2;
    }

    /* Ensure text is on top */
    .note span {
        position: relative;
        z-index: 3; /* Above both pseudo-elements */
        display: inline-block;
    }

    /* Square shape */
    .note.shape-square::before,
    .note.shape-square::after {
        clip-path: polygon( 0% 0%, 100% 0%, 100% 100%, 0% 100% );
    }

    /* Triangle shape */
    .note.shape-triangle::before,
    .note.shape-triangle::after {
        clip-path: polygon( 50% 0%, 100% 100%, 0% 100% );
    }

    /* Diamond shape */
    .note.shape-diamond::before,
    .note.shape-diamond::after {
        clip-path: polygon( 50% 0%, 100% 50%, 50% 100%, 0% 50% );
    }

    /* Circle shape - using octagon polygon */
    .note.shape-circle::before,
    .note.shape-circle::after {
        clip-path: polygon( 30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30% );
    }

/* Player A styles */
.note-a {
    color: #00cc7a; /* Border color */
}

    .note-a::after {
        background-color: rgba(26, 108, 49, 0.9); /* Background matches player A side */
    }

/* Player B styles */
.note-b {
    color: #ff00cc; /* Border color */
}

    .note-b::after {
        background-color: rgba(113, 28, 145, 0.9); /* Background matches player B side */
    }

/* Filled state - overrides for both players */
.note-a:not(.hollow)::after {
    background-color: #00ff9d; /* Filled state for player A */
}

.note-b:not(.hollow)::after {
    background-color: #ff00cc; /* Filled state for player B */
}

/* Hollow state overrides */
.note.hollow::after {
    /* Background already set to player colors above */
}

/* Portal counterpart styling */
.portal-counterpart {
    opacity: 0;
    pointer-events: none; /* Make portal counterparts non-interactive */
    z-index: 6; /* Above regular notes but below active dragged notes */
}

    /* When a note crosses the divider, make its counterpart visible */
    .portal-counterpart.portal-active {
        opacity: 1;
    }

/* Dragging state */
.note.dragging {
    cursor: grabbing;
    transform: scale(1.1);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
    opacity: 0.9;
    z-index: 30 !important; /* Ensure it's on top of everything while dragging */
}

/* Note inside sequencer cell */
.note-in-cell {
    position: relative;
    top: 0;
    left: 0;
    margin: 0 auto;
}

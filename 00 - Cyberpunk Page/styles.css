/* style.css - Consolidated Cyberpunk Portfolio Styles */

/* ===== Layout Fixes ===== */
.app-container {
  height: calc(100vh - 9rem);
  overflow: hidden;
}

.app-skeleton {
  overflow: hidden;
}

/* ===== Header & Footer Animations ===== */
/* Header line animation */
.app-header::after {
  width: 0;
  animation: lineGrow 1.5s forwards;
  animation-delay: 1.2s;
}

/* Footer styling and animation */
.dialog-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 100;
  overflow: hidden;
}

.dialog-footer::before {
  background-color: var(--colors-primary--500);
  box-shadow: var(--ui-glow);
  top: 0;
  content: "";
  height: 2px;
  position: absolute;
  left: 0;
  width: 0;
  animation: lineGrow 1.5s forwards;
  animation-delay: 1.2s;
}

/* Center dialog in footer */
.dialog-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  text-align: center;
}

.dialog-speaker {
  color: var(--colors-secondary--500);
  font-weight: bold;
  margin-right: 0;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
}

.dialog-text {
  color: var(--colors-tertiary--500);
  text-align: center;
  max-width: 800px;
}

/* ===== Animations ===== */
/* Typewriter effect */
.typewriter {
  overflow: hidden;
  white-space: nowrap;
  margin: 0;
  letter-spacing: 0.05em;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

/* Fade-in animation */
.fade-in {
  opacity: 0;
  animation: fadeIn 2s forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Line growth animation */
@keyframes lineGrow {
  from { width: 0; }
  to { width: 100%; }
}

/* Glitch text animation */
.glitch-text {
  display: inline-block;
  animation: glitch 1s infinite alternate;
  position: relative;
}

@keyframes glitch {
  0% { transform: translateX(0); }
  20% { transform: translateX(-2px); }
  40% { transform: translateX(2px); }
  60% { color: var(--colors-secondary--500); }
  80% { transform: translateY(-2px); }
  100% { transform: translateY(1px); }
}

/* Glitch effect variables and base styling */
:root {
  --full-glitch-slice-0: inset(50% 50% 50% 50%);
  --full-glitch-slice-1: inset(80% -6px 0 0);
  --full-glitch-slice-2: inset(50% -6px 30% 0);
  --full-glitch-slice-3: inset(10% -6px 85% 0);
  --full-glitch-slice-4: inset(40% -6px 43% 0);
  --full-glitch-slice-5: inset(80% -6px 5% 0);
}

/* Base styles for glitch elements */
.glitch-full {
  position: relative;
  overflow: visible !important;
  transition: opacity 0.7s ease-in-out, transform 0.7s ease-in-out;
}

/* Element that will disappear with glitch */
.glitch-full.glitch-hide {
  opacity: 0;
  transform: translateY(20px) scale(0.95);
}

/* Container for glitch copies */
.glitch-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: visible;
  pointer-events: none;
  z-index: 999;
}

/* Glitch copy element styling */
.glitch-copy {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; 
  background: inherit;
  background-color: inherit;
  color: inherit;
  border: inherit;
  pointer-events: none;
  z-index: 9;
}

/* First glitch copy with cyan border */
.glitch-copy-1 {
  border: 2px solid #00E6F6;
  box-shadow: 0 0 8px rgba(0, 230, 246, 0.4);
  animation: glitchCopy1 0.8s steps(2, start) infinite;
}

/* Second glitch copy with yellow border */
.glitch-copy-2 {
  border: 2px solid #F8F005;
  box-shadow: 0 0 8px rgba(248, 240, 5, 0.4);
  animation: glitchCopy2 0.8s steps(2, end) infinite; 
  animation-delay: 0.05s;
}

/* Animation for first glitch copy */
@keyframes glitchCopy1 {
  0% {
    clip-path: var(--full-glitch-slice-1);
    transform: translate(-20px, -10px);
  }
  20% {
    clip-path: var(--full-glitch-slice-3);
    transform: translate(10px, 10px);
  }
  40% {
    clip-path: var(--full-glitch-slice-5);
    transform: translate(-15px, 5px);
  }
  60% {
    clip-path: var(--full-glitch-slice-4);
    transform: translate(5px, 10px);
  }
  80% {
    clip-path: var(--full-glitch-slice-2);
    transform: translate(20px, -10px);
  }
  100% {
    clip-path: var(--full-glitch-slice-3);
    transform: translate(-10px, 0px);
  }
}

/* Animation for second glitch copy */
@keyframes glitchCopy2 {
  0% {
    clip-path: var(--full-glitch-slice-3);
    transform: translate(10px, 5px);
  }
  20% {
    clip-path: var(--full-glitch-slice-1);
    transform: translate(-15px, 10px);
  }
  40% {
    clip-path: var(--full-glitch-slice-2);
    transform: translate(15px, -5px);
  }
  60% {
    clip-path: var(--full-glitch-slice-5);
    transform: translate(-5px, 8px);
  }
  80% {
    clip-path: var(--full-glitch-slice-4);
    transform: translate(15px, -10px);
  }
  100% {
    clip-path: var(--full-glitch-slice-2);
    transform: translate(-15px, 5px);
  }
}

/* Redacted text effect */
.redacted {
  display: inline-block;
  position: relative;
  background-color: var(--colors-primary--700);
  padding: 0 0.15em;
  border-radius: 2px;
  user-select: none;
}

.redacted::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 2px;
  box-shadow: var(--ui-glow);
}

/* Make redacted text flicker occasionally */
.redacted-flicker {
  animation: redacted-flicker 8s infinite;
}

@keyframes redacted-flicker {
  0%, 95%, 98% { 
    color: transparent;
    background-color: var(--colors-primary--700);
  }
  96%, 97% { 
    color: var(--colors-primary--200);
    background-color: transparent;
  }
}

/* Data corruption effect */
.corrupted {
  display: inline-block;
  color: var(--colors-secondary--500);
  position: relative;
  font-family: var(--fonts-secondary);
  letter-spacing: 0.1em;
}

.corrupted::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  color: var(--colors-primary--500);
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim 3s infinite linear alternate-reverse;
}

.corrupted::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  color: var(--colors-secondary--500);
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim-2 4s infinite linear alternate-reverse;
}

@keyframes noise-anim {
  0% {
    clip: rect(57px, 9999px, 6px, 0);
  }
  5% {
    clip: rect(22px, 9999px, 3px, 0);
  }
  10% {
    clip: rect(41px, 9999px, 29px, 0);
  }
  15% {
    clip: rect(56px, 9999px, 93px, 0);
  }
  20% {
    clip: rect(89px, 9999px, 25px, 0);
  }
  25% {
    clip: rect(6px, 9999px, 56px, 0);
  }
  30% {
    clip: rect(63px, 9999px, 61px, 0);
  }
  35% {
    clip: rect(39px, 9999px, 2px, 0);
  }
  40% {
    clip: rect(26px, 9999px, 13px, 0);
  }
  45% {
    clip: rect(90px, 9999px, 62px, 0);
  }
  50% {
    clip: rect(32px, 9999px, 47px, 0);
  }
  55% {
    clip: rect(30px, 9999px, 88px, 0);
  }
  60% {
    clip: rect(13px, 9999px, 66px, 0);
  }
  65% {
    clip: rect(41px, 9999px, 14px, 0);
  }
  70% {
    clip: rect(99px, 9999px, 64px, 0);
  }
  75% {
    clip: rect(35px, 9999px, 3px, 0);
  }
  80% {
    clip: rect(72px, 9999px, 16px, 0);
  }
  85% {
    clip: rect(92px, 9999px, 35px, 0);
  }
  90% {
    clip: rect(62px, 9999px, 31px, 0);
  }
  95% {
    clip: rect(69px, 9999px, 30px, 0);
  }
  100% {
    clip: rect(27px, 9999px, 59px, 0);
  }
}

/* Warning text effect */
.warning-text {
  display: inline-block;
  color: var(--colors-tertiary--500);
  font-weight: bold;
  padding: 0 0.25em;
  background-color: rgba(254, 211, 63, 0.1);
  border-left: 2px solid var(--colors-tertiary--500);
  border-right: 2px solid var(--colors-tertiary--500);
}
.warning-scroll {
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  position: relative;
  max-width: 100%;
}

.warning-scroll .warning-text-content {
  display: inline-block;
  padding-left: 100%;
  animation: warning-scroll var(--scroll-duration, 8000ms) linear infinite;
  animation-delay: var(--scroll-delay, 1000ms);
}

@keyframes warning-scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

/* Terminal typing effect (simpler inline typewriter) */
.terminal-typing {
  display: inline-block;
  border-right: 0.15em solid var(--colors-secondary--500);
  animation: terminal-blink 1s step-end infinite;
  white-space: nowrap;
}

@keyframes terminal-blink {
  from, to { border-color: transparent }
  50% { border-color: var(--colors-secondary--500); }
}

/* Access granted/denied text */
.access-granted {
  display: inline-block;
  color: var(--colors-active--500);
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  animation: pulse-access 2s infinite;
}

.access-denied {
  display: inline-block;
  color: var(--colors-primary--500);
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  animation: pulse-access 2s infinite;
}

@keyframes pulse-access {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}



/* ===== Special Effects ===== */
/* Scanner line effect */
.scanner-effect {
  position: relative;
  overflow: hidden;
}

.scanner-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 300%;
  height: 2px;
  background-color: var(--colors-secondary--500);
  opacity: 0.6;
  box-shadow: 0 0 10px var(--colors-secondary--500);
  animation: scanner-line 8s linear infinite;
  z-index: 1;
}

@keyframes scanner-line {
  0% { top: -2px; }
  100% { top: 100%; }
}

/* Noise overlay effect */
.noise-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: contrast(190%) brightness(150%) grayscale(1);
  opacity: 0.03;
  pointer-events: none;
  z-index: 999;
}

/* CRT scanline effect */
.crt-effect {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.03) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  background-size: 100% 8px;
  pointer-events: none;
  z-index: 999;
  opacity: 0.15;
}

/* Loading animation */
.loading-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 1000;
  display: none;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.loading-text {
  color: var(--colors-secondary--500);
  font-family: var(--fonts-secondary);
  font-size: 2rem;
  margin-bottom: 2rem;
  text-transform: uppercase;
  animation: glitch 1s infinite alternate;
}

.loading-bar-container {
  width: 50%;
  height: 20px;
  background-color: var(--colors-bg--300);
  border: 2px solid var(--colors-primary--600);
}

.loading-bar {
  height: 100%;
  background-color: var(--colors-primary--500);
  width: 0%;
  transition: width 3s ease-in-out;
}

/* Utility class */
.hidden {
  display: none !important;
}

.dialog-data {
  display: none;
}

/* ===== Updated Incoming Call UI (Match Screenshot) ===== */

/* Incoming Call UI - Matches Screenshot 2 */
.fixer-call-section {
  position: fixed;
  top: 50%;
  left: 50%;
  /* Use margin instead of transform for centering */
  margin-left: -150px; /* Half of the approximate width */
  margin-top: -100px; /* Half of the approximate height */
  z-index: 1000;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 300px; /* Set a fixed width to calculate margin properly */
}

#accept-call {
  -webkit-clip-path: polygon(
    0 0,
    100% 0,
    100% 100%,
    var(--ui-notch-amount) 100%,
    0 calc(100% - var(--ui-notch-amount))
  );
  clip-path: polygon(
    0 0,
    100% 0,
    100% 100%,
    var(--ui-notch-amount) 100%,
    0 calc(100% - var(--ui-notch-amount))
  );
}

/* For the notch line on blue button */
#accept-call::before {
  background-color: currentcolor;
  bottom: 5px;
  left: -6px;
  top: auto;
  content: "";
  display: block;
  height: 3px;
  position: absolute;
  transform: rotate(45deg);
  width: var(--ui-notch-hypotenuse);
  z-index: 100;
}

.incoming-call-box {
  background-color: rgba(0, 0, 0, 0.85);
  border: 1px solid #e83b36;
  display: flex;
  flex-direction: column;
}

.incoming-call-header {
  display: flex;
  align-items: center;
}

.call-icon {
  color: #e83b36;
  margin-right: 0.5rem;
}

.incoming-call-label {
  color: #e83b36;
  font-family: var(--fonts-secondary);
  text-transform: uppercase;
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

.caller-id-container {
  background-color: rgba(51, 17, 17, 0.9);
  border: 1px solid #e83b36;
  padding: 0.5rem;
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  width: 100%;
}

.caller-phone-icon {
  color: #e83b36;
  margin-right: 0.75rem;
}

.caller-id {
  color: #e83b36;
  font-family: var(--fonts-secondary);
  font-size: 1.2rem;
  text-transform: uppercase;
}

.fixer-actions {
  display: flex;
  justify-content: space-between;
  width: 100%;
  gap: 0;
}

#accept-call, #decline-call {
  flex-grow: 0.48;
  margin: 0;
  text-align: center;
}

/* Button content centering */
.button__content {
  display: block;
  text-align: center;
}

.answer-hint {
  color: #2be4ea;
  display: flex;
  align-items: center;
  margin-right: 2rem;
}

.decline-hint {
  color: #e83b36;
  display: flex;
  align-items: center;
}

#accept-call .button__content {
  color: #2be4ea;
}

/* Left sidebar (app-a) positioning */
.app-a {
  grid-area: a;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
}

/* Fixed area for the caller indicator */
.fixed-caller-area {
  position: relative;
  min-height: 250px; /* Set a fixed height for this area */
  width: 100%;
  margin-bottom: 1rem;
}

/* Active Call UI styling */
.active-call-indicator {
  position: absolute;
  top: 10px;
  left: 0;
  width: 100%;
  z-index: 900;
  background-color: transparent;
  display: flex;
  flex-direction: column;
}

.active-call-header {
  padding: 0.25rem 0.5rem;
  margin-bottom: 2px;
}

.active-call-connection {
  color: #e83b36;
  font-family: var(--fonts-secondary);
  font-size: 0.75rem;
  text-transform: uppercase;
}

.active-caller-name {
  color: #2be4ea;
  font-family: var(--fonts-secondary);
  font-size: 1.25rem;
  text-transform: uppercase;
}

.caller-avatar {
  position: relative;
  width: 100%;
  height: 200px;
}

.caller-avatar-frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px solid #e83b36;
  background-size: 10px 10px;
  background-position: 0 0, 5px 5px;
  pointer-events: none;
  z-index: 2;
  box-shadow: 0 0 15px rgba(232, 59, 54, 0.5);
}

.nav-section {
  width: 100%;
}

.caller-avatar img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  background-color: #000;
  filter: contrast(120%) saturate(120%);
}


.caller-avatar::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 15px;
  height: 15px;
  background-color: #e83b36;
  clip-path: polygon(0 0, 100% 0, 100% 100%);
  z-index: 3;
}

.caller-avatar::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 15px;
  height: 15px;
  background-color: #e83b36;
  clip-path: polygon(0 0, 100% 100%, 0 100%);
  z-index: 3;
}

/* Relic Malfunction UI - Matches Screenshot 1 */
.relic-malfunction-overlay {
  position: fixed;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2000;
  background-color: rgba(0, 0, 0, 0.8);
  border: 1px solid #e83b36;
  padding: 0.5rem 0.75rem;
  display: flex;
  align-items: center;
}

.warning-triangle {
  color: #e83b36;
  margin-right: 0.75rem;
  transform: translateY(2px);
}

.warning-triangle svg {
  fill: currentColor;
}

.relic-malfunction-text {
  color: #e83b36;
  font-family: var(--fonts-secondary);
  font-size: 1.1rem;
  text-transform: uppercase;
}

/* Full-screen glitch effect */
.fullscreen-glitch {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1500;
  display: none;
}

.fullscreen-glitch.active {
  display: block;
  background-color: rgba(232, 59, 54, 0.1);
  animation: fullscreenGlitch 0.3s infinite;
}

@keyframes fullscreenGlitch {
  0% { transform: translate(0); }
  20% { transform: translate(-5px, 5px); background-color: rgba(43, 228, 234, 0.1); }
  40% { transform: translate(-5px, -5px); background-color: rgba(232, 59, 54, 0.1); }
  60% { transform: translate(5px, 5px); background-color: rgba(43, 228, 234, 0.1); }
  80% { transform: translate(5px, -5px); background-color: rgba(232, 59, 54, 0.1); }
  100% { transform: translate(0); }
}

/* Fade to black overlay */
.fade-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0);
  transition: background-color 1.5s ease;
  pointer-events: none;
  z-index: 2000;
  display: none;
}

.fade-overlay.active {
  display: block;
  background-color: rgba(0, 0, 0, 1);
}

/* Add to the end of your styles.css file */

/* Simple glitch copy element styling */
.simple-glitch-copy {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; 
  background: inherit;
  background-color: inherit;
  color: inherit;
  pointer-events: none;
  z-index: 100;
}

/* First glitch copy with cyan border */
.simple-glitch-copy-1 {
  border: 2px solid #00E6F6;
  box-shadow: 0 0 8px rgba(0, 230, 246, 0.4);
  animation: simple-glitch-1 0.8s steps(2, end);
  clip-path: inset(10% -6px 85% 0);
}

/* Second glitch copy with yellow border */
.simple-glitch-copy-2 {
  border: 2px solid #F8F005;
  box-shadow: 0 0 8px rgba(248, 240, 5, 0.4);
  animation: simple-glitch-2 0.8s steps(2, end); 
  animation-delay: 0.05s;
  clip-path: inset(40% -6px 43% 0);
}

/* Animation for first glitch copy */
@keyframes simple-glitch-1 {
  0% {
    clip-path: inset(80% -6px 0 0);
    transform: translate(-20px, -10px);
  }
  20% {
    clip-path: inset(10% -6px 85% 0);
    transform: translate(10px, 10px);
  }
  40% {
    clip-path: inset(80% -6px 5% 0);
    transform: translate(-15px, 5px);
  }
  60% {
    clip-path: inset(40% -6px 43% 0);
    transform: translate(5px, 10px);
  }
  80% {
    clip-path: inset(50% -6px 30% 0);
    transform: translate(20px, -10px);
  }
  100% {
    clip-path: inset(10% -6px 85% 0);
    transform: translate(-10px, 0px);
  }
}

/* Animation for second glitch copy */
@keyframes simple-glitch-2 {
  0% {
    clip-path: inset(10% -6px 85% 0);
    transform: translate(10px, 5px);
  }
  20% {
    clip-path: inset(80% -6px 0 0);
    transform: translate(-15px, 10px);
  }
  40% {
    clip-path: inset(50% -6px 30% 0);
    transform: translate(15px, -5px);
  }
  60% {
    clip-path: inset(80% -6px 5% 0);
    transform: translate(-5px, 8px);
  }
  80% {
    clip-path: inset(40% -6px 43% 0);
    transform: translate(15px, -10px);
  }
  100% {
    clip-path: inset(50% -6px 30% 0);
    transform: translate(-15px, 5px);
  }
}